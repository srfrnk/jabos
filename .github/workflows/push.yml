name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}-
  VERSION: "1.0"
  NAMESPACE: jabos

jobs:
  manifests:
    runs-on: ubuntu-latest
    env:
      BUILD_NUMBER: ${{github.run_number}}
    steps:
      - uses: actions/checkout@v2

      - name: Package
        run: |-
          docker run --mount "type=bind,src=$PWD/manifests,dst=/src" --entrypoint sh -w /src \
            -e 'IMAGE_PREFIX=${{env.REGISTRY}}/${{env.IMAGE_PREFIX}}' \
            -e 'BUILD_NUMBER=${{env.VERSION}}.${{env.BUILD_NUMBER}}' \
            -e 'NAMESPACE=${{env.NAMESPACE}}' \
            -e 'IS_PRODUCTION=true' \
          node:lts-alpine -c "npm install && npm run import && npm run compile && npm run test && npm run synth"

      - uses: snyk/actions/setup@master
      - uses: actions/setup-go@v1
        with:
          go-version: "1.13"

      - run: snyk iac test --sarif-file-output=snyk.sarif ./manifests/dist/jabos.k8s.yaml || true
        shell: bash
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}

      - uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
          category: manifests

      - uses: srfrnk/setup-yq@v1.0.2

      - name: Generate Docs
        run: |-
          mkdir -p ./build/output
          mkdir -p ./build/input
          chmod -R 777 ./build/input
          chmod -R 777 ./build/output
          cp ./manifests/dist/jabos.k8s.yaml ./build/input/jabos.k8s.yaml
          yq e '.api-info.version="${{env.VERSION}}.${{env.BUILD_NUMBER}}"' ./api-info.yaml > ./build/input/api-info.yaml
          docker run --mount "type=bind,src=$(pwd)/build/input,dst=/input,readonly" \
            --mount "type=bind,src=$(pwd)/build/output,dst=/output" \
            ghcr.io/srfrnk/crd-api-doc-gen:latest /input /output /input/api-info.yaml

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: manifest_artifacts
          path: |
            build/output/
            manifests/dist/jabos.k8s.yaml
            README.md

  images:
    needs: manifests
    runs-on: ubuntu-latest
    env:
      BUILD_NUMBER: ${{github.run_number}}
    steps:
      - uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: manifest_artifacts

      - name: Copy manifests artifact
        run: |-
          mkdir -p ./operator/imports
          cp ./manifests/dist/jabos.k8s.yaml ./operator/imports

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{runner.os}}-buildx-${{github.sha}}
          restore-keys: |
            ${{runner.os}}-buildx-

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Compile
        run: |-
          docker run --mount "type=bind,src=$PWD,dst=/src" --entrypoint sh -w /src/operator \
          node:lts-alpine -c "npm install && npm run compile && npm run test"

      - uses: snyk/actions/setup@master
      - uses: actions/setup-go@v1
        with:
          go-version: "1.13"

      - name: kubectl
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: kubectl
          context: kubectl

      - name: base-manifest-builder
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: base-manifest-builder
          context: base-manifest-builder

      - name: kaniko
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: kaniko
          context: kaniko

      - name: operator
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: operator
          context: operator

      - name: git-repository-updater
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: git-repository-updater
          context: git-repository-updater

      - name: docker-image-builder-init
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: docker-image-builder-init
          context: docker-image-builder-init

      - name: post-builder
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: post-builder
          context: post-builder

      - name: pre-builder
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: pre-builder
          context: pre-builder

      - name: manifest-deployer
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: manifest-deployer
          context: manifest-deployer

      - name: manifest-cleaner
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: manifest-cleaner
          context: manifest-cleaner

      - name: jsonnet-manifest-builder
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: jsonnet-manifest-builder
          context: jsonnet-manifest-builder

      - name: plain-manifest-builder
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: plain-manifest-builder
          context: plain-manifest-builder

      - name: helm-template-manifest-builder
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: helm-template-manifest-builder
          context: helm-template-manifest-builder

      - name: kustomize-manifest-builder
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: kustomize-manifest-builder
          context: kustomize-manifest-builder

      - name: cdk8s-manifest-builder
        uses: ./.github/workflows/actions/image
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          name: cdk8s-manifest-builder
          context: cdk8s-manifest-builder

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  release:
    needs: images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      BUILD_NUMBER: ${{github.run_number}}
    steps:
      - uses: actions/checkout@v2

      - name: Download manifest artifacts
        uses: actions/download-artifact@v2
        with:
          name: manifest_artifacts

      - name: Deploy Docs
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: build/output

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Build ${{env.VERSION}}.${{env.BUILD_NUMBER}}
          tag_name: ${{env.VERSION}}.${{env.BUILD_NUMBER}}
          draft: false
          prerelease: false

      - name: Upload Manifests Asset
        id: upload-release-asset-manifests
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manifests/dist/jabos.k8s.yaml
          asset_name: jabos-manifests.yaml
          asset_content_type: text/yaml

      - name: Upload Readme Asset
        id: upload-release-asset-readme
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./README.md
          asset_name: README.md
          asset_content_type: text/markdown

      - name: Upload Api Docs Asset
        id: upload-release-asset-api-docs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/output/index.html
          asset_name: api-docs.html
          asset_content_type: text/html
